<?php

/**
 *
 * @copyright  2019-2021 objectivejs.org
 * @version    3
 * @link       http://www.objectivejs.org
 */
?>
<?php $debug=false; ?>
<?php $editor=true; ?>
<?php $player=true; ?>
<?php $clipname='teletype'; ?>
<?php head('javascript', 'js.cookie.js'); ?>
<?php if ($editor): ?>
<?php head('javascript', 'jquery.minicolors'); ?>
<?php head('stylesheet', 'jquery.minicolors', 'screen'); ?>
<?php endif; ?>
<?php $id=uniqid('id'); ?>
<style>
.teletype {
	display: flex;
	align-items: center;
	user-select: none;
}
.teletype span {
	flex: 1 1 auto;
	white-space: pre;
}
</style>
<?php if ($editor): ?>
<style>
#<?php echo $id; ?> .teletype {
	border-right: 4px dotted #ccc;
}
#<?php echo $id; ?>_teletype_text {
	width: 30em;
}
#<?php echo $id; ?>_teletype_textsize {
	width: 3em;
}
#<?php echo $id; ?>_teletype_textbold {
	line-height: 14px;
}
#<?php echo $id; ?>_teletype_textwidth {
	width: 3em;
}
</style>
<?php endif; ?>
<div id="<?php echo $id; ?>" class="clip">
<?php if ($editor): ?>
<div class="ojs">
<div>
<div class="ojs_undo">
<button type="submit" class="ojs_button narrow control_undo" disabled><i class="fa fa-undo"></i></button>
<button type="submit" class="ojs_button narrow control_redo" disabled><i class="fa fa-redo"></i></button>
</div>
<span>
<input class="ojs_width" type="number" min="120" max="960" step="10"/>&nbsp;<i class="fa fa-arrows-alt-h small"></i>
<input class="ojs_height" type="number" min="10" max="540" step="10"/>&nbsp;<i class="fa fa-arrows-alt-v small"></i>
</span>
</div>
<input id="<?php echo $id; ?>_teletype_text" type="text" size="40" spellcheck="false"/>
<div>
<span><input id="<?php echo $id; ?>_teletype_textsize" type="number" min="10" max="60" step="1"/>&nbsp;<i class="fa fa-text-height small"></i></span>
<span><input id="<?php echo $id; ?>_teletype_textbold" type="checkbox" />&nbsp;<i class="fa fa-bold small"></i></span>
<span id="<?php echo $id; ?>_teletype_textcolor"></span>
<span id="<?php echo $id; ?>_teletype_textalignment">
<input type="radio" id="<?php echo $id; ?>_teletype_textalignment_left" name="teletype_textalignment" value="left" checked><label for="<?php echo $id; ?>_teletype_textalignment_left"><i class="fa fa-align-left small"></i></label>
<input type="radio" id="<?php echo $id; ?>_teletype_textalignment_center" name="teletype_textalignment" value="center"><label for="<?php echo $id; ?>_teletype_textalignment_center"><i class="fa fa-align-center small"></i></label>
<input type="radio" id="<?php echo $id; ?>_teletype_textalignment_right" name="teletype_textalignment" value="right"><label for="<?php echo $id; ?>_teletype_textalignment_right"><i class="fa fa-align-right small"></i></label>
</span>
</div>
<div>
<span>
<input id="<?php echo $id; ?>_teletype_textfont" type="text" size="20" spellcheck="false"/>&nbsp;<i class="fa fa-font small"></i>
</span>
</div>
<fieldset class="ojs_animation">
<legend><i class="fa fa-history"></i>&nbsp;<span class="ojs_timing">0</span></legend>
<input class="ojs_interval" type="number" min="100" max="500" step="50"/>&nbsp;<i class="fa fa-tachometer-alt small"></i>
<input id="<?php echo $id; ?>_teletype_textwidth" type="number" min="10" max="100" step="1"/>&nbsp;<i class="fa fa-text-width small"></i>
</fieldset>
</div>
<?php endif; ?>
<div class="teletype"></div>
</div>
<?php head('javascript', '/objectivejs/Objective.js'); ?>
<?php head('javascript', '/objectivejs/Responder.js'); ?>
<?php head('javascript', '/objectivejs/View.js'); ?>
<?php head('javascript', '/objectivejs/Clip.js'); ?>
<?php head('javascript', '/objectivejs/Model.js'); ?>
<?php head('javascript', '/objectivejs/Validator.js'); ?>
<?php if ($editor): ?>
<?php head('javascript', '/objectivejs/Editor.js'); ?>
<?php head('javascript', '/objectivejs/ClipEditor.js'); ?>
<?php head('javascript', '/objectivejs/Inspector.js'); ?>
<?php head('javascript', '/objectivejs/BooleanInspector.js'); ?>
<?php head('javascript', '/objectivejs/ColorInspector.js'); ?>
<?php head('javascript', '/objectivejs/NumberInspector.js'); ?>
<?php head('javascript', '/objectivejs/StringInspector.js'); ?>
<?php head('javascript', '/objectivejs/SelectInspector.js'); ?>
<?php head('javascript', '/objectivejs/OptionInspector.js'); ?>
<?php head('javascript', '/objectivejs/Undo.js'); ?>
<?php head('javascript', '/objectivejs/Panel.js'); ?>
<?php head('javascript', '/objectivejs/UndoPanel.js'); ?>
<?php else: ?>
<?php head('javascript', '/objectivejs/ClipController.js'); ?>
<?php endif; ?>
<?php head('javascript', '/objectivejs/ClipModel.js'); ?>
<?php head('javascript', '/objectivejs/ProgramClip.js'); ?>
<?php head('javascript', '/objectivejs/ModelCookieDelegate.js'); ?>
<?php head('javascript', '/objectivejs/tests/TeletypeModel.js'); ?>
<?php head('javascript', '/objectivejs/tests/TeletypeClip.js'); ?>
<script>
<?php if ($editor): ?>
function TeleTypeClipEditor() {
	ClipEditor.apply(this, arguments);
}

TeleTypeClipEditor.prototype = Object.create(ClipEditor.prototype);

Object.defineProperty(TeleTypeClipEditor.prototype, 'constructor', { value: TeleTypeClipEditor, enumerable: false, writable: true });

TeleTypeClipEditor.prototype.clipEnded = function(sender) {
	sender.showText();
}
<?php endif; ?>
</script>
<script>
<?php if (!$debug): ?>
(function() {
<?php endif; ?>
	const clip = new TeletypeClip();

	const model = new TeletypeModel('<?php echo $clipname; ?>');

	const container = document.querySelector('#<?php echo $id; ?>');

	clip.setManagedWidget(container.querySelector('.teletype'));

	clip.set(model.get());

<?php if ($player): ?>
	clip.enablePlayer();
<?php endif; ?>

<?php if ($editor): ?>
	const panel = new UndoPanel();

	panel.setManagedWidget(container.querySelector('.ojs_undo')).resetWidget();

	const widthInspector = new NumberInspector(model.getValue('width'), {min: TeletypeModel.minWidth, max: TeletypeModel.maxWidth});

	widthInspector.setManagedWidget(container.querySelector('.ojs_width')).resetWidget();

	const heightInspector = new NumberInspector(model.getValue('height'), {min: TeletypeModel.minHeight, max: TeletypeModel.maxHeight});

	heightInspector.setManagedWidget(container.querySelector('.ojs_height')).resetWidget();

	const textInspector = new StringInspector(model.getValue('text'), {min: TeletypeModel.minTextLength, max: TeletypeModel.maxTextLength, trim: false, required: false});

	textInspector.setManagedWidget(container.querySelector('#<?php echo $id; ?>_teletype_text')).resetWidget();

	const textSizeInspector = new NumberInspector(model.getValue('textSize'), {min: TeletypeModel.minTextSize, max: TeletypeModel.maxTextSize});

	textSizeInspector.setManagedWidget(container.querySelector('#<?php echo $id; ?>_teletype_textsize')).resetWidget();

	const textBoldInspector = new BooleanInspector(model.getValue('textBold'));

	textBoldInspector.setManagedWidget(container.querySelector('#<?php echo $id; ?>_teletype_textbold')).resetWidget();

	const textColorInspector = new ColorInspector(model.getValue('textColor'));

	textColorInspector.createManagedWidget(container.querySelector('#<?php echo $id; ?>_teletype_textcolor'));

	const textFontInspector = new StringInspector(model.getValue('textFont'));

	textFontInspector.setManagedWidget(container.querySelector('#<?php echo $id; ?>_teletype_textfont')).resetWidget();

	const textAlignmentInspector = new OptionInspector(model.getValue('textAlignment'), {tags: TeletypeModel.textAlignmentOptions});

	textAlignmentInspector.setManagedWidget(container.querySelector('#<?php echo $id; ?>_teletype_textalignment')).resetWidget();

	const textWidthInspector = new NumberInspector(model.getValue('textWidth'));

	textWidthInspector.setManagedWidget(container.querySelector('#<?php echo $id; ?>_teletype_textwidth')).resetWidget();

	const intervalInspector = new NumberInspector(model.getValue('interval'), {min: TeletypeModel.minInterval, max: TeletypeModel.maxInterval});

	intervalInspector.setManagedWidget(container.querySelector('.ojs_interval')).resetWidget();

	const timing = new View();

	timing.setManagedWidget(container.querySelector('.ojs_timing'));

	const inspectors = {
		width:			widthInspector,
		height:			heightInspector,
		text:			textInspector,
		textFont:		textFontInspector,
		textSize:		textSizeInspector,
		textBold:		textBoldInspector,
		textColor:		textColorInspector,
		textAlignment:	textAlignmentInspector,
		textWidth:		textWidthInspector,
		interval:		intervalInspector
	};

	const editor = new TeleTypeClipEditor(model, clip, inspectors, panel, timing);
<?php else: ?>
	const controller = new ClipController(clip, model);
<?php endif; ?>

	model.setDelegate(new ModelCookieDelegate());

	if (model.isSaved())
		model.readIn();
	else
		model.setValue('text', 'Objective.js');

	model.enableSync();
<?php if (!$debug): ?>
})();
<?php endif; ?>
</script>
