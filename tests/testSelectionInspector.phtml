<?php

/**
 *
 * @copyright  2019-2020 objectivejs.org
 * @version    2
 * @link       http://www.objectivejs.org
 */
?>
<?php $text='Objective.js'; ?>
<?php $font='Roboto'; ?>
<?php $fontSize=32; ?>
<?php $color='#333'; ?>
<?php $bg='#fd1'; ?>
<?php head('font', $font); ?>
<?php $id=uniqid('id'); ?>
<style>
.test_display {
	width: 240px;
	height: 135px;
	display: flex;
	align-items: center;
	justify-content: center;
	background: <?php echo $bg; ?>;
	color: <?php echo $color; ?>;
	font-family: "<?php echo $font; ?>", sans-serif;
	font-size: <?php echo $fontSize; ?>px;
	font-style: italic;
	margin-bottom: 10px;
	border-radius: 3px;
}
</style>
<div id="<?php echo $id; ?>" class="noprint">
<div class="test_display"><?php echo $text; ?></div>
<div class="ojs">
<div class="options_panel">
<span class="nowrap"><input type="checkbox" id="text_appearance_bold" name="text_appearance[]" value="bold"/><label for="text_appearance_bold"><span class="btn_edit btn_b" title="Gras">B</span></label></span>
<span class="nowrap"><input type="checkbox" id="text_appearance_italic" name="text_appearance[]" value="italic"/><label for="text_appearance_italic"><span class="btn_edit btn_i" title="Italique">I</span></label></span>
<span class="nowrap"><input type="checkbox" id="text_appearance_underline" name="text_appearance[]" value="underline"/><label for="text_appearance_underline"><span class="btn_edit btn_u" title="SoulignÃ©">S</span></label></span>
</div>
</div>
</div>
<?php head('javascript', '/objectivejs/Objective.js'); ?>
<?php head('javascript', '/objectivejs/Responder.js'); ?>
<?php head('javascript', '/objectivejs/View.js'); ?>
<?php head('javascript', '/objectivejs/Inspector.js'); ?>
<?php head('javascript', '/objectivejs/SelectionInspector.js'); ?>
<script>
function Tester(display, inspector) {
	Responder.call(this);

	this._display = display;

	inspector.addNextResponder(this);

	this._inspector = inspector;
}

Tester.prototype = Object.create(Responder.prototype);

Object.defineProperty(Tester.prototype, 'constructor', { value: Tester, enumerable: false, writable: true });

Tester.prototype.inspectorValueChanged = function(sender) {
	if (sender === this._inspector) {
		let options = sender.get();

		this._display.style.fontWeight = options.indexOf('bold') != -1 ? 'bold' : 'normal';
		this._display.style.fontStyle = options.indexOf('italic') != -1 ? 'italic' : 'normal';
		this._display.style.textDecoration = options.indexOf('underline') != -1 ? 'underline' : 'none';
	}

	return true;
}
</script>
<script>
const inspector = new SelectionInspector(['italic'], {tags: ['bold', 'italic', 'underline']});

const container = document.querySelector('#<?php echo $id; ?>');

const display = container.querySelector('.test_display');

inspector.setManagedWidget(container.querySelector('.options_panel')).resetWidget();

const tester = new Tester(display, inspector);
</script>
