<?php

/**
 *
 * @copyright  2019-2021 objectivejs.org
 * @version    4
 * @link       http://www.objectivejs.org
 */
?>
<?php $text='Objective.js'; ?>
<?php $font='Roboto'; ?>
<?php $fontSize=32; ?>
<?php $color='#333'; ?>
<?php $bg='#fd1'; ?>
<?php $min=10; ?>
<?php $max=40; ?>
<?php head('font', $font); ?>
<?php $id=uniqid('id'); ?>
<style>
.test_display {
	width: 240px;
	height: 135px;
	display: flex;
	align-items: center;
	justify-content: center;
	background: <?php echo $bg; ?>;
	color: <?php echo $color; ?>;
	font-family: "<?php echo $font; ?>", sans-serif;
	font-size: <?php echo $fontSize; ?>px;
	margin-bottom: 10px;
	border-radius: 3px;
}
#text_fontsize {
	width: 3em;
}
</style>
<div id="<?php echo $id; ?>" class="noprint">
<div class="test_display"><?php echo $text; ?></div>
<div class="ojs">
<div>
<span>
<i class="fas fa-text-height small"></i>
<input id="text_fontsize" type="number" min="<?php echo $min; ?>" max="<?php echo $max; ?>" step="1" value="<?php echo $fontSize; ?>"/>
</span>
</div>
</div>
</div>
<?php head('javascript', '/objectivejs/Objective.js'); ?>
<?php head('javascript', '/objectivejs/Responder.js'); ?>
<?php head('javascript', '/objectivejs/View.js'); ?>
<?php head('javascript', '/objectivejs/Inspector.js'); ?>
<?php head('javascript', '/objectivejs/NumberInspector.js'); ?>
<script>
function Tester(display, inspector) {
	Responder.call(this);

	this._display = display;

	inspector.addNextResponder(this);

	this._inspector = inspector;
}

Tester.prototype = Object.create(Responder.prototype);

Object.defineProperty(Tester.prototype, 'constructor', { value: Tester, enumerable: false, writable: true });

Tester.prototype.inspectorValueChanged = function(sender) {
	if (sender === this._inspector)
		this._display.style.fontSize = `${sender.get()}px`;

	return true;
}
</script>
<script>
const inspector = new NumberInspector(<?php echo $fontSize; ?>, { min: <?php echo $min; ?>, max: <?php echo $max; ?> });

const container = document.querySelector('#<?php echo $id; ?>');

const display = container.querySelector('.test_display');

inspector.setManagedWidget(container.querySelector('#text_fontsize')).resetWidget();

const tester = new Tester(display, inspector);
</script>
